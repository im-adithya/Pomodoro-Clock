{"version":3,"sources":["Timer.js","index.js"],"names":["sec","ss","Timer","props","handleReset","setState","prevState","timerSec","session","stateHandle","audioBeep","pause","currentTime","clearInterval","state","handleStartStop","bind","logger","second","setterone","settertwo","x","this","timerMin","minHandler","breakLength","sessionLength","console","log","play","setTimeout","setInterval","className","id","toString","onClick","preload","src","ref","audio","React","Component","App","handleTimerMin","handleState","one","two","three","handleBreakInc","handleBreakDec","handleSessionInc","handleSessionDec","ReactDOM","render","document","getElementById"],"mappings":"kIAEIA,E,mEACAC,EAAK,EAEHC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoFVC,YAAc,WACV,EAAKC,UAAS,SAAAC,GACV,MAAO,CACHC,SAAU,EACVC,QAAS,cAIjB,EAAKL,MAAMM,YAAY,GAAI,EAAG,IAC9B,EAAKC,UAAUC,QACf,EAAKD,UAAUE,YAAc,EAC7BC,cAAcb,GACdC,EAAK,GA/FL,EAAKa,MAAQ,CACTP,SAAU,EACVC,QAAS,WAEb,EAAKO,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKZ,YAAc,EAAKA,YAAYY,KAAjB,gBACnB,EAAKT,SAAW,EAAKA,SAASS,KAAd,gBAChB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,UAAY,EAAKA,UAAUH,KAAf,gBACjB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBAZF,E,mDAeZK,GACH,OAAU,IAANA,GAAmC,IAAxBC,KAAKnB,MAAMoB,SACf,EAEI,IAANF,GACLC,KAAKnB,MAAMqB,WAAYF,KAAKnB,MAAMoB,SAAY,GACvC,IAGAF,EAAI,I,kCAKfC,KAAKnB,MAAMqB,WAAWF,KAAKnB,MAAMsB,aACjCH,KAAKP,oB,kCAILO,KAAKnB,MAAMqB,WAAWF,KAAKnB,MAAMuB,eACjCJ,KAAKP,oB,+BAIuB,IAAxBO,KAAKnB,MAAMoB,UAA0C,IAAxBD,KAAKR,MAAMP,WACxCoB,QAAQC,IAAI,cACZN,KAAKZ,UAAUmB,OACfP,KAAKZ,UAAUE,YAAc,EAC7BC,cAAcb,GACa,YAAvBsB,KAAKR,MAAMN,SACXc,KAAKjB,SAAS,CACVE,SAAU,EACVC,QAAS,UAEbsB,WAAWR,KAAKH,UAAW,OAG3BG,KAAKjB,SAAS,CACVE,SAAU,EACVC,QAAS,YAEbsB,WAAWR,KAAKF,UAAW,MAE/BnB,EAAK,K,iCAKD,IAAD,OAEPqB,KAAKjB,UAAS,SAACC,GACX,MAAO,CAAEC,SAAU,EAAKW,OAAOZ,EAAUC,cAE7CoB,QAAQC,IAAIN,KAAKnB,MAAMoB,SAAUD,KAAKR,MAAMP,UAEhB,IAAxBe,KAAKnB,MAAMoB,UAA0C,IAAxBD,KAAKR,MAAMP,UACxCe,KAAKL,W,wCAKLhB,EAAK,IAAM,EACXD,EAAM+B,YAAYT,KAAKf,SAAU,KAGjCM,cAAcb,GAElBC,M,+BAkBM,IAAD,OAEL,OACI,yBAAK+B,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKC,GAAG,eAAeX,KAAKR,MAAMN,SAClC,yBAAKyB,GAAG,aACJ,8BAA+B,IAAxBX,KAAKnB,MAAMoB,SAAiB,KAAOD,KAAKnB,MAAMoB,SAAW,GAAK,IAAMD,KAAKnB,MAAMoB,SAASW,WAAaZ,KAAKnB,MAAMoB,SAASW,YAChI,mCACA,8BAA+B,IAAxBZ,KAAKR,MAAMP,SAAiB,KAAOe,KAAKR,MAAMP,SAAW,GAAK,IAAMe,KAAKR,MAAMP,SAAWe,KAAKR,MAAMP,YAIpH,yBAAKyB,UAAU,YACX,0BAAMG,QAASb,KAAKP,gBAAiBkB,GAAG,cAAxC,cACA,0BAAME,QAASb,KAAKlB,YAAa6B,GAAG,SAApC,UAGJ,2BACIA,GAAG,OACHG,QAAQ,OACRC,IAAI,4GACJC,IAAK,SAACC,GACF,EAAK7B,UAAY6B,U,GA5HrBC,IAAMC,WAiQXC,E,kDA5HX,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IAQVwC,eAAiB,SAACtB,GACVA,GAAK,EACL,EAAKhB,SAAS,CACVkB,SAAUF,IAId,EAAKhB,SAAS,CACVkB,SAAU,KAjBH,EAsBnBqB,YAAc,SAACC,EAAKC,EAAKC,GACrB,EAAK1C,SAAS,CACVkB,SAAUsB,EACVpB,YAAaqB,EACbpB,cAAeqB,KA1BJ,EA8BnBC,eAAiB,WACb,EAAK3C,UAAS,SAAAC,GACV,OAA8B,KAA1BA,EAAUmB,YACH,CACHA,YAAa,IAIV,CACHA,YAAanB,EAAUmB,YAAc,OAvClC,EA6CnBwB,eAAiB,WACb,EAAK5C,UAAS,SAAAC,GACV,OAA8B,IAA1BA,EAAUmB,YACH,CACHA,YAAa,GAIV,CACHA,YAAanB,EAAUmB,YAAc,OAtDlC,EA4DnByB,iBAAmB,WACf,EAAK7C,UAAS,SAAAC,GACV,OAAgC,KAA5BA,EAAUoB,cACH,CACHA,cAAe,GACfH,SAAU,IAIP,CACHG,cAAepB,EAAUoB,cAAgB,EACzCH,SAAUjB,EAAUiB,SAAW,OAvE5B,EA6EnB4B,iBAAmB,WACf,EAAK9C,UAAS,SAAAC,GACV,OAAgC,IAA5BA,EAAUoB,cACH,CACHA,cAAe,EACfH,SAAU,GAIP,CACHG,cAAepB,EAAUoB,cAAgB,EACzCH,SAAUjB,EAAUiB,SAAW,OAtF3C,EAAKT,MAAQ,CACTS,SAAU,GACVE,YAAa,EACbC,cAAe,IALJ,E,qDA+Ff,OACI,6BACI,yBAAKM,UAAU,MACX,yBAAKA,UAAU,aACX,yBAAKC,GAAG,eAAR,gBACA,4BAAQE,QAASb,KAAK0B,eAAehC,KAAKM,MAAOW,GAAG,mBAApD,MACA,0BAAMA,GAAG,gBAAgBX,KAAKR,MAAMW,aACpC,4BAAQU,QAASb,KAAK2B,eAAejC,KAAKM,MAAOW,GAAG,mBAApD,SAEJ,yBAAKD,UAAU,eACX,yBAAKC,GAAG,iBAAR,kBACA,4BAAQE,QAASb,KAAK4B,iBAAiBlC,KAAKM,MAAOW,GAAG,qBAAtD,MACA,0BAAMA,GAAG,kBAAkBX,KAAKR,MAAMY,eACtC,4BAAQS,QAASb,KAAK6B,iBAAiBnC,KAAKM,MAAOW,GAAG,qBAAtD,UAGR,kBAAC,EAAD,CACIV,SAAUD,KAAKR,MAAMS,SACrBE,YAAaH,KAAKR,MAAMW,YACxBC,cAAeJ,KAAKR,MAAMY,cAC1BjB,YAAaa,KAAKsB,YAClBpB,WAAYF,KAAKqB,sB,GArHnBH,IAAMC,WCpIxBW,IAASC,OACL,6BACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.bb9b7089.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nvar sec\r\nvar ss = 2\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            timerSec: 0,\r\n            session: \"session\"\r\n        }\r\n        this.handleStartStop = this.handleStartStop.bind(this)\r\n        this.handleReset = this.handleReset.bind(this)\r\n        this.timerSec = this.timerSec.bind(this)\r\n        this.logger = this.logger.bind(this)\r\n        this.second = this.second.bind(this)\r\n        this.setterone = this.setterone.bind(this)\r\n        this.settertwo = this.settertwo.bind(this)\r\n    }\r\n\r\n    second(x) {\r\n        if (x === 1 && this.props.timerMin === 0) {\r\n            return 0\r\n        }\r\n        else if (x === 0) {\r\n            this.props.minHandler((this.props.timerMin) - 1)\r\n            return 59\r\n        }\r\n        else {\r\n            return x - 1\r\n        }\r\n    }\r\n\r\n    setterone() {\r\n        this.props.minHandler(this.props.breakLength)\r\n        this.handleStartStop()\r\n    }\r\n\r\n    settertwo() {\r\n        this.props.minHandler(this.props.sessionLength)\r\n        this.handleStartStop()\r\n    }\r\n\r\n    logger() {\r\n        if (this.props.timerMin === 0 && this.state.timerSec === 0) {\r\n            console.log(\"done bitch\")\r\n            this.audioBeep.play()\r\n            this.audioBeep.currentTime = 0\r\n            clearInterval(sec)\r\n            if (this.state.session === \"session\") {\r\n                this.setState({\r\n                    timerSec: 0,\r\n                    session: \"break\"\r\n                })\r\n                setTimeout(this.setterone, 1000)\r\n            }\r\n            else {\r\n                this.setState({\r\n                    timerSec: 0,\r\n                    session: \"session\"\r\n                })\r\n                setTimeout(this.settertwo, 1000)\r\n            }\r\n            ss = 2\r\n\r\n        }\r\n    }\r\n\r\n    timerSec() {\r\n\r\n        this.setState((prevState) => {\r\n            return { timerSec: this.second(prevState.timerSec) }\r\n        })\r\n        console.log(this.props.timerMin, this.state.timerSec);\r\n\r\n        if (this.props.timerMin === 0 && this.state.timerSec === 0) {\r\n            this.logger()\r\n        }\r\n    }\r\n\r\n    handleStartStop() {\r\n        if (ss % 2 === 0) {\r\n            sec = setInterval(this.timerSec, 1000)\r\n        }\r\n        else {\r\n            clearInterval(sec)\r\n        }\r\n        ss++\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                timerSec: 0,\r\n                session: \"session\"\r\n            }\r\n        })\r\n\r\n        this.props.stateHandle(25, 5, 25)\r\n        this.audioBeep.pause()\r\n        this.audioBeep.currentTime = 0\r\n        clearInterval(sec)\r\n        ss = 2\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"tim\">\r\n                <div className=\"timer\">\r\n                    <div id=\"timer-label\">{this.state.session}</div>\r\n                    <div id=\"time-left\">\r\n                        <span>{this.props.timerMin === 0 ? \"00\" : this.props.timerMin < 10 ? \"0\" + this.props.timerMin.toString() : this.props.timerMin.toString()}</span>\r\n                        <span>:</span>\r\n                        <span>{this.state.timerSec === 0 ? \"00\" : this.state.timerSec < 10 ? \"0\" + this.state.timerSec : this.state.timerSec}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <span onClick={this.handleStartStop} id=\"start_stop\">Start/Stop</span>\r\n                    <span onClick={this.handleReset} id=\"reset\">Reset</span>\r\n                </div>\r\n\r\n                <audio\r\n                    id=\"beep\"\r\n                    preload=\"auto\"\r\n                    src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n                    ref={(audio) => {\r\n                        this.audioBeep = audio;\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            timerMin: 25,\r\n            breakLength: 5,\r\n            sessionLength: 25\r\n        }\r\n    }\r\n\r\n    handleTimerMin = (x) => {\r\n        if (x >= 0) {\r\n            this.setState({\r\n                timerMin: x\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                timerMin: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    handleState = (one, two, three) => {\r\n        this.setState({\r\n            timerMin: one,\r\n            breakLength: two,\r\n            sessionLength: three\r\n        })\r\n    }\r\n\r\n    handleBreakInc = () => {\r\n        this.setState(prevState => {\r\n            if (prevState.breakLength === 60) {\r\n                return {\r\n                    breakLength: 60,\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    breakLength: prevState.breakLength + 1\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleBreakDec = () => {\r\n        this.setState(prevState => {\r\n            if (prevState.breakLength === 1) {\r\n                return {\r\n                    breakLength: 1\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    breakLength: prevState.breakLength - 1\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSessionInc = () => {\r\n        this.setState(prevState => {\r\n            if (prevState.sessionLength === 60) {\r\n                return {\r\n                    sessionLength: 60,\r\n                    timerMin: 60\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    sessionLength: prevState.sessionLength + 1,\r\n                    timerMin: prevState.timerMin + 1\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSessionDec = () => {\r\n        this.setState(prevState => {\r\n            if (prevState.sessionLength === 1) {\r\n                return {\r\n                    sessionLength: 1,\r\n                    timerMin: 1\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    sessionLength: prevState.sessionLength - 1,\r\n                    timerMin: prevState.timerMin - 1\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bs\">\r\n                    <div className=\"break ses\">\r\n                        <div id=\"break-label\">Break Length</div>\r\n                        <button onClick={this.handleBreakInc.bind(this)} id=\"break-increment\">up</button>\r\n                        <span id=\"break-length\">{this.state.breakLength}</span>\r\n                        <button onClick={this.handleBreakDec.bind(this)} id=\"break-decrement\">down</button>\r\n                    </div>\r\n                    <div className=\"session ses\">\r\n                        <div id=\"session-label\">Session Length</div>\r\n                        <button onClick={this.handleSessionInc.bind(this)} id=\"session-increment\">up</button>\r\n                        <span id=\"session-length\">{this.state.sessionLength}</span>\r\n                        <button onClick={this.handleSessionDec.bind(this)} id=\"session-decrement\">down</button>\r\n                    </div>\r\n                </div>\r\n                <Timer\r\n                    timerMin={this.state.timerMin}\r\n                    breakLength={this.state.breakLength}\r\n                    sessionLength={this.state.sessionLength}\r\n                    stateHandle={this.handleState}\r\n                    minHandler={this.handleTimerMin} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './Timer'\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <App />\r\n    </div>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}